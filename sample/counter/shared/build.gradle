import com.arkivanov.Android
import com.arkivanov.Ios
import com.arkivanov.Js
import com.arkivanov.Watchos

def darwinBinaries = {
    framework {
        baseName = "Counter"
        transitiveExport = true
        export(project(":decompose"))
    }
}

if (!setupMultiplatform(
        project,
        new Android(),
        new Ios(binaries: darwinBinaries),
        new Js(mode: Js.Mode.IR),

        // Temporary disabled watchos targets due to https://youtrack.jetbrains.com/issue/KT-48613
        // Until Kotlin 1.5.31
//        new Watchos(binaries: darwinBinaries)
)) {
    return
}

doIfAndroidEnabled(project) {
    plugins.apply("kotlin-parcelize")
    setupCompose(project)
    setupComposeMppWorkaround(project)
}

kotlin {
    sourceSets {
        commonMain {
            dependencies {
                api project(':decompose')
                implementation "com.badoo.reaktive:reaktive:$reaktiveVersion"
            }
        }

        androidMain {
            dependencies {
                implementation project(':extensions-compose-jetpack')
                implementation project(':extensions-android')
                implementation "androidx.compose.foundation:foundation:$composeJetpackVersion"
                implementation "androidx.compose.material:material:$composeJetpackVersion"
                implementation "androidx.compose.ui:ui-tooling:$composeJetpackVersion"
                implementation "com.google.android.material:material:$androidMaterialVersion"
            }
        }

        jsMain {
            dependencies {
                implementation "org.jetbrains.kotlin-wrappers:kotlin-react:$jsKotlinReactVersion"
                implementation "org.jetbrains.kotlin-wrappers:kotlin-styled:$jsKotlinStyledVersion"
                implementation "com.ccfraser.muirwik:muirwik-components:$jsMuirwikVersion"
            }
        }
    }
}
