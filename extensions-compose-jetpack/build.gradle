import com.arkivanov.Android

if (!isTargetEnabled(Android.class)) {
    return
}

plugins.apply('com.android.library')
plugins.apply('kotlin-android')
plugins.apply('maven-publish')

setupAndroid(project)
setupCompose(project)

android {
    lintOptions {
        disable "UnusedCrossfadeTargetStateParameter"
    }

    defaultConfig {
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    packagingOptions {
        pickFirst 'META-INF/AL2.0'
        pickFirst 'META-INF/LGPL2.0'
        pickFirst 'META-INF/LGPL2.1'
    }
}

dependencies {
    implementation project(':decompose')
    implementation "androidx.compose.foundation:foundation:$composeJetpackVersion"
    implementation "androidx.activity:activity-ktx:$androidxActivityVersion"
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$composeJetpackVersion"
    androidTestImplementation "junit:junit:$junitVersion"
    androidTestImplementation "androidx.compose.ui:ui-test-manifest:$composeJetpackVersion"
    androidTestImplementation "androidx.test:core:$androidxTestCoreVersion"
}

afterEvaluate {
    publishing {
        publications {
            debug(MavenPublication) {
                from components.debug
                artifact sourceJar

                group = "com.arkivanov.decompose"
                artifactId = "extensions-compose-jetpack-debug"
                version = decomposeVersion

                setupPublicationPom(project, it)
            }

            release(MavenPublication) {
                from components.release
                artifact sourceJar

                group = "com.arkivanov.decompose"
                artifactId = "extensions-compose-jetpack"
                version = decomposeVersion

                setupPublicationPom(project, it)
            }
        }
    }

    setupPublicationRepository(project)
}

task sourceJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier "source"
}
