// Klib ABI Dump
// Targets: [iosArm64, iosSimulatorArm64, iosX64, js, macosArm64, macosX64, wasmJs]
// Rendering settings:
// - Signature version: 2
// - Show manifest properties: true
// - Show declarations: true

// Library unique name: <com.arkivanov.decompose:extensions-compose-experimental>
abstract fun interface <#A: kotlin/Any, #B: kotlin/Any> com.arkivanov.decompose.extensions.compose.experimental.stack.animation/StackAnimation { // com.arkivanov.decompose.extensions.compose.experimental.stack.animation/StackAnimation|null[0]
    abstract fun invoke(com.arkivanov.decompose.router.stack/ChildStack<#A, #B>, androidx.compose.ui/Modifier, kotlin/Function4<androidx.compose.animation/AnimatedVisibilityScope, com.arkivanov.decompose/Child.Created<#A, #B>, androidx.compose.runtime/Composer, kotlin/Int, kotlin/Unit>, androidx.compose.runtime/Composer?, kotlin/Int) // com.arkivanov.decompose.extensions.compose.experimental.stack.animation/StackAnimation.invoke|invoke(com.arkivanov.decompose.router.stack.ChildStack<1:0,1:1>;androidx.compose.ui.Modifier;kotlin.Function4<androidx.compose.animation.AnimatedVisibilityScope,com.arkivanov.decompose.Child.Created<1:0,1:1>,androidx.compose.runtime.Composer,kotlin.Int,kotlin.Unit>;androidx.compose.runtime.Composer?;kotlin.Int){}[0]
}

abstract fun interface com.arkivanov.decompose.extensions.compose.experimental.stack.animation/StackAnimator { // com.arkivanov.decompose.extensions.compose.experimental.stack.animation/StackAnimator|null[0]
    abstract fun (androidx.compose.animation/AnimatedVisibilityScope).animate(com.arkivanov.decompose.extensions.compose.stack.animation/Direction, androidx.compose.runtime/Composer?, kotlin/Int): androidx.compose.ui/Modifier // com.arkivanov.decompose.extensions.compose.experimental.stack.animation/StackAnimator.animate|animate@androidx.compose.animation.AnimatedVisibilityScope(com.arkivanov.decompose.extensions.compose.stack.animation.Direction;androidx.compose.runtime.Composer?;kotlin.Int){}[0]
}

abstract interface com.arkivanov.decompose.extensions.compose.experimental.stack.animation/StackAnimationProvider { // com.arkivanov.decompose.extensions.compose.experimental.stack.animation/StackAnimationProvider|null[0]
    abstract fun <#A1: kotlin/Any, #B1: kotlin/Any> provide(): com.arkivanov.decompose.extensions.compose.experimental.stack.animation/StackAnimation<#A1, #B1>? // com.arkivanov.decompose.extensions.compose.experimental.stack.animation/StackAnimationProvider.provide|provide(){0§<kotlin.Any>;1§<kotlin.Any>}[0]
}

final class <#A: in kotlin/Any, #B: in kotlin/Any> com.arkivanov.decompose.extensions.compose.experimental.stack.animation/PredictiveBackParams { // com.arkivanov.decompose.extensions.compose.experimental.stack.animation/PredictiveBackParams|null[0]
    constructor <init>(com.arkivanov.essenty.backhandler/BackHandler, kotlin/Function0<kotlin/Unit>, kotlin/Function1<com.arkivanov.essenty.backhandler/BackEvent, com.arkivanov.decompose.extensions.compose.stack.animation.predictiveback/PredictiveBackAnimatable?> = ...) // com.arkivanov.decompose.extensions.compose.experimental.stack.animation/PredictiveBackParams.<init>|<init>(com.arkivanov.essenty.backhandler.BackHandler;kotlin.Function0<kotlin.Unit>;kotlin.Function1<com.arkivanov.essenty.backhandler.BackEvent,com.arkivanov.decompose.extensions.compose.stack.animation.predictiveback.PredictiveBackAnimatable?>){}[0]

    final val animatable // com.arkivanov.decompose.extensions.compose.experimental.stack.animation/PredictiveBackParams.animatable|{}animatable[0]
        final fun <get-animatable>(): kotlin/Function1<com.arkivanov.essenty.backhandler/BackEvent, com.arkivanov.decompose.extensions.compose.stack.animation.predictiveback/PredictiveBackAnimatable?> // com.arkivanov.decompose.extensions.compose.experimental.stack.animation/PredictiveBackParams.animatable.<get-animatable>|<get-animatable>(){}[0]
    final val backHandler // com.arkivanov.decompose.extensions.compose.experimental.stack.animation/PredictiveBackParams.backHandler|{}backHandler[0]
        final fun <get-backHandler>(): com.arkivanov.essenty.backhandler/BackHandler // com.arkivanov.decompose.extensions.compose.experimental.stack.animation/PredictiveBackParams.backHandler.<get-backHandler>|<get-backHandler>(){}[0]
    final val onBack // com.arkivanov.decompose.extensions.compose.experimental.stack.animation/PredictiveBackParams.onBack|{}onBack[0]
        final fun <get-onBack>(): kotlin/Function0<kotlin/Unit> // com.arkivanov.decompose.extensions.compose.experimental.stack.animation/PredictiveBackParams.onBack.<get-onBack>|<get-onBack>(){}[0]
}

final val com.arkivanov.decompose.extensions.compose.experimental.stack.animation/LocalStackAnimationProvider // com.arkivanov.decompose.extensions.compose.experimental.stack.animation/LocalStackAnimationProvider|{}LocalStackAnimationProvider[0]
    final fun <get-LocalStackAnimationProvider>(): androidx.compose.runtime/ProvidableCompositionLocal<com.arkivanov.decompose.extensions.compose.experimental.stack.animation/StackAnimationProvider> // com.arkivanov.decompose.extensions.compose.experimental.stack.animation/LocalStackAnimationProvider.<get-LocalStackAnimationProvider>|<get-LocalStackAnimationProvider>(){}[0]
final val com.arkivanov.decompose.extensions.compose.experimental.stack.animation/com_arkivanov_decompose_extensions_compose_experimental_stack_animation_DefaultStackAnimation$stableprop // com.arkivanov.decompose.extensions.compose.experimental.stack.animation/com_arkivanov_decompose_extensions_compose_experimental_stack_animation_DefaultStackAnimation$stableprop|#static{}com_arkivanov_decompose_extensions_compose_experimental_stack_animation_DefaultStackAnimation$stableprop[0]
final val com.arkivanov.decompose.extensions.compose.experimental.stack.animation/com_arkivanov_decompose_extensions_compose_experimental_stack_animation_DefaultStackAnimator$stableprop // com.arkivanov.decompose.extensions.compose.experimental.stack.animation/com_arkivanov_decompose_extensions_compose_experimental_stack_animation_DefaultStackAnimator$stableprop|#static{}com_arkivanov_decompose_extensions_compose_experimental_stack_animation_DefaultStackAnimator$stableprop[0]
final val com.arkivanov.decompose.extensions.compose.experimental.stack.animation/com_arkivanov_decompose_extensions_compose_experimental_stack_animation_PredictiveBackParams$stableprop // com.arkivanov.decompose.extensions.compose.experimental.stack.animation/com_arkivanov_decompose_extensions_compose_experimental_stack_animation_PredictiveBackParams$stableprop|#static{}com_arkivanov_decompose_extensions_compose_experimental_stack_animation_PredictiveBackParams$stableprop[0]

final fun (com.arkivanov.decompose.extensions.compose.experimental.stack.animation/StackAnimator).com.arkivanov.decompose.extensions.compose.experimental.stack.animation/plus(com.arkivanov.decompose.extensions.compose.experimental.stack.animation/StackAnimator): com.arkivanov.decompose.extensions.compose.experimental.stack.animation/StackAnimator // com.arkivanov.decompose.extensions.compose.experimental.stack.animation/plus|plus@com.arkivanov.decompose.extensions.compose.experimental.stack.animation.StackAnimator(com.arkivanov.decompose.extensions.compose.experimental.stack.animation.StackAnimator){}[0]
final fun <#A: kotlin/Any, #B: kotlin/Any> com.arkivanov.decompose.extensions.compose.experimental.stack.animation/stackAnimation(com.arkivanov.decompose.extensions.compose.experimental.stack.animation/StackAnimator = ..., kotlin/Boolean = ..., kotlin/Function1<com.arkivanov.decompose.router.stack/ChildStack<#A, #B>, com.arkivanov.decompose.extensions.compose.experimental.stack.animation/PredictiveBackParams<#A, #B>?> = ...): com.arkivanov.decompose.extensions.compose.experimental.stack.animation/StackAnimation<#A, #B> // com.arkivanov.decompose.extensions.compose.experimental.stack.animation/stackAnimation|stackAnimation(com.arkivanov.decompose.extensions.compose.experimental.stack.animation.StackAnimator;kotlin.Boolean;kotlin.Function1<com.arkivanov.decompose.router.stack.ChildStack<0:0,0:1>,com.arkivanov.decompose.extensions.compose.experimental.stack.animation.PredictiveBackParams<0:0,0:1>?>){0§<kotlin.Any>;1§<kotlin.Any>}[0]
final fun <#A: kotlin/Any, #B: kotlin/Any> com.arkivanov.decompose.extensions.compose.experimental.stack.animation/stackAnimation(kotlin/Boolean = ..., kotlin/Function1<com.arkivanov.decompose.router.stack/ChildStack<#A, #B>, com.arkivanov.decompose.extensions.compose.experimental.stack.animation/PredictiveBackParams<#A, #B>?> = ..., kotlin/Function3<com.arkivanov.decompose/Child.Created<#A, #B>, com.arkivanov.decompose/Child.Created<#A, #B>, com.arkivanov.decompose.extensions.compose.stack.animation/Direction, com.arkivanov.decompose.extensions.compose.experimental.stack.animation/StackAnimator?>): com.arkivanov.decompose.extensions.compose.experimental.stack.animation/StackAnimation<#A, #B> // com.arkivanov.decompose.extensions.compose.experimental.stack.animation/stackAnimation|stackAnimation(kotlin.Boolean;kotlin.Function1<com.arkivanov.decompose.router.stack.ChildStack<0:0,0:1>,com.arkivanov.decompose.extensions.compose.experimental.stack.animation.PredictiveBackParams<0:0,0:1>?>;kotlin.Function3<com.arkivanov.decompose.Child.Created<0:0,0:1>,com.arkivanov.decompose.Child.Created<0:0,0:1>,com.arkivanov.decompose.extensions.compose.stack.animation.Direction,com.arkivanov.decompose.extensions.compose.experimental.stack.animation.StackAnimator?>){0§<kotlin.Any>;1§<kotlin.Any>}[0]
final fun <#A: kotlin/Any, #B: kotlin/Any> com.arkivanov.decompose.extensions.compose.experimental.stack/ChildStack(com.arkivanov.decompose.router.stack/ChildStack<#A, #B>, androidx.compose.ui/Modifier?, com.arkivanov.decompose.extensions.compose.experimental.stack.animation/StackAnimation<#A, #B>?, kotlin/Function4<androidx.compose.animation/AnimatedVisibilityScope, com.arkivanov.decompose/Child.Created<#A, #B>, androidx.compose.runtime/Composer, kotlin/Int, kotlin/Unit>, androidx.compose.runtime/Composer?, kotlin/Int, kotlin/Int) // com.arkivanov.decompose.extensions.compose.experimental.stack/ChildStack|ChildStack(com.arkivanov.decompose.router.stack.ChildStack<0:0,0:1>;androidx.compose.ui.Modifier?;com.arkivanov.decompose.extensions.compose.experimental.stack.animation.StackAnimation<0:0,0:1>?;kotlin.Function4<androidx.compose.animation.AnimatedVisibilityScope,com.arkivanov.decompose.Child.Created<0:0,0:1>,androidx.compose.runtime.Composer,kotlin.Int,kotlin.Unit>;androidx.compose.runtime.Composer?;kotlin.Int;kotlin.Int){0§<kotlin.Any>;1§<kotlin.Any>}[0]
final fun <#A: kotlin/Any, #B: kotlin/Any> com.arkivanov.decompose.extensions.compose.experimental.stack/ChildStack(com.arkivanov.decompose.value/Value<com.arkivanov.decompose.router.stack/ChildStack<#A, #B>>, androidx.compose.ui/Modifier?, com.arkivanov.decompose.extensions.compose.experimental.stack.animation/StackAnimation<#A, #B>?, kotlin/Function4<androidx.compose.animation/AnimatedVisibilityScope, com.arkivanov.decompose/Child.Created<#A, #B>, androidx.compose.runtime/Composer, kotlin/Int, kotlin/Unit>, androidx.compose.runtime/Composer?, kotlin/Int, kotlin/Int) // com.arkivanov.decompose.extensions.compose.experimental.stack/ChildStack|ChildStack(com.arkivanov.decompose.value.Value<com.arkivanov.decompose.router.stack.ChildStack<0:0,0:1>>;androidx.compose.ui.Modifier?;com.arkivanov.decompose.extensions.compose.experimental.stack.animation.StackAnimation<0:0,0:1>?;kotlin.Function4<androidx.compose.animation.AnimatedVisibilityScope,com.arkivanov.decompose.Child.Created<0:0,0:1>,androidx.compose.runtime.Composer,kotlin.Int,kotlin.Unit>;androidx.compose.runtime.Composer?;kotlin.Int;kotlin.Int){0§<kotlin.Any>;1§<kotlin.Any>}[0]
final fun com.arkivanov.decompose.extensions.compose.experimental.stack.animation/com_arkivanov_decompose_extensions_compose_experimental_stack_animation_DefaultStackAnimation$stableprop_getter(): kotlin/Int // com.arkivanov.decompose.extensions.compose.experimental.stack.animation/com_arkivanov_decompose_extensions_compose_experimental_stack_animation_DefaultStackAnimation$stableprop_getter|com_arkivanov_decompose_extensions_compose_experimental_stack_animation_DefaultStackAnimation$stableprop_getter(){}[0]
final fun com.arkivanov.decompose.extensions.compose.experimental.stack.animation/com_arkivanov_decompose_extensions_compose_experimental_stack_animation_DefaultStackAnimator$stableprop_getter(): kotlin/Int // com.arkivanov.decompose.extensions.compose.experimental.stack.animation/com_arkivanov_decompose_extensions_compose_experimental_stack_animation_DefaultStackAnimator$stableprop_getter|com_arkivanov_decompose_extensions_compose_experimental_stack_animation_DefaultStackAnimator$stableprop_getter(){}[0]
final fun com.arkivanov.decompose.extensions.compose.experimental.stack.animation/com_arkivanov_decompose_extensions_compose_experimental_stack_animation_PredictiveBackParams$stableprop_getter(): kotlin/Int // com.arkivanov.decompose.extensions.compose.experimental.stack.animation/com_arkivanov_decompose_extensions_compose_experimental_stack_animation_PredictiveBackParams$stableprop_getter|com_arkivanov_decompose_extensions_compose_experimental_stack_animation_PredictiveBackParams$stableprop_getter(){}[0]
final fun com.arkivanov.decompose.extensions.compose.experimental.stack.animation/fade(androidx.compose.animation.core/FiniteAnimationSpec<kotlin/Float> = ..., kotlin/Float = ...): com.arkivanov.decompose.extensions.compose.experimental.stack.animation/StackAnimator // com.arkivanov.decompose.extensions.compose.experimental.stack.animation/fade|fade(androidx.compose.animation.core.FiniteAnimationSpec<kotlin.Float>;kotlin.Float){}[0]
final fun com.arkivanov.decompose.extensions.compose.experimental.stack.animation/scale(androidx.compose.animation.core/FiniteAnimationSpec<kotlin/Float> = ..., kotlin/Float = ..., kotlin/Float = ...): com.arkivanov.decompose.extensions.compose.experimental.stack.animation/StackAnimator // com.arkivanov.decompose.extensions.compose.experimental.stack.animation/scale|scale(androidx.compose.animation.core.FiniteAnimationSpec<kotlin.Float>;kotlin.Float;kotlin.Float){}[0]
final fun com.arkivanov.decompose.extensions.compose.experimental.stack.animation/slide(androidx.compose.animation.core/FiniteAnimationSpec<kotlin/Float> = ..., androidx.compose.foundation.gestures/Orientation = ...): com.arkivanov.decompose.extensions.compose.experimental.stack.animation/StackAnimator // com.arkivanov.decompose.extensions.compose.experimental.stack.animation/slide|slide(androidx.compose.animation.core.FiniteAnimationSpec<kotlin.Float>;androidx.compose.foundation.gestures.Orientation){}[0]
final fun com.arkivanov.decompose.extensions.compose.experimental.stack.animation/stackAnimator(androidx.compose.animation.core/FiniteAnimationSpec<kotlin/Float> = ..., kotlin/Function4<kotlin/Float, com.arkivanov.decompose.extensions.compose.stack.animation/Direction, androidx.compose.runtime/Composer, kotlin/Int, androidx.compose.ui/Modifier>): com.arkivanov.decompose.extensions.compose.experimental.stack.animation/StackAnimator // com.arkivanov.decompose.extensions.compose.experimental.stack.animation/stackAnimator|stackAnimator(androidx.compose.animation.core.FiniteAnimationSpec<kotlin.Float>;kotlin.Function4<kotlin.Float,com.arkivanov.decompose.extensions.compose.stack.animation.Direction,androidx.compose.runtime.Composer,kotlin.Int,androidx.compose.ui.Modifier>){}[0]
